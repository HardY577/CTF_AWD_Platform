# Generated by Django 2.1.7 on 2019-08-05 20:41

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import info.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('competition', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AwdSubmit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awd_submit_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='提交时间')),
                ('awd_submit_flag', models.CharField(max_length=255, verbose_name='提交flag')),
                ('awd_submit_result', models.BooleanField(verbose_name='判定结果')),
            ],
            options={
                'verbose_name': 'AWD提交flag',
                'verbose_name_plural': 'AWD提交flag',
            },
        ),
        migrations.CreateModel(
            name='CompetitionChoiceSubmit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('true_result', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], max_length=2, verbose_name='正确答案')),
                ('submit_result', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], max_length=2, null=True, verbose_name='提交的答案')),
                ('result', models.BooleanField(blank=True, null=True, verbose_name='答案是否正确')),
            ],
            options={
                'verbose_name': '比赛选择题题目及提交状况',
                'verbose_name_plural': '比赛选择题题目及提交状况',
            },
        ),
        migrations.CreateModel(
            name='CtfCompetitionTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submit_times', models.IntegerField(default=0, verbose_name='正确提交次数')),
            ],
            options={
                'verbose_name': '比赛CTF题目',
                'verbose_name_plural': '比赛CTF题目',
            },
        ),
        migrations.CreateModel(
            name='CtfSubmit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submit_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='提交时间')),
                ('submit_flag', models.CharField(max_length=255, verbose_name='提交flag')),
                ('submit_result', models.BooleanField(verbose_name='判定结果')),
            ],
            options={
                'verbose_name': 'CTF提交记录',
                'verbose_name_plural': 'CTF提交记录',
            },
        ),
        migrations.CreateModel(
            name='Illegality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('illegality_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='添加记录的时间')),
                ('illegality_action', models.SmallIntegerField(choices=[(0, '作弊'), (1, '攻击平台'), (2, '其他')], default=2, verbose_name='行为')),
                ('illegality_times', models.IntegerField(default=1, verbose_name='违规次数')),
                ('illegality_duration', models.IntegerField(verbose_name='封禁时间(分钟)')),
                ('illegality_starttime', models.DateTimeField(verbose_name='封禁开始时间')),
                ('illegality_endtime', models.DateTimeField(verbose_name='封禁结束时间')),
                ('duration_status', models.BooleanField(verbose_name='封禁状态')),
            ],
            options={
                'verbose_name': '比赛违规',
                'verbose_name_plural': '比赛违规',
            },
        ),
        migrations.CreateModel(
            name='TeamCompetitionInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_all', models.IntegerField(default=0, verbose_name='队伍总得分')),
                ('score_choice', models.IntegerField(default=0, verbose_name='选择题得分')),
                ('score_ctf', models.IntegerField(default=0, verbose_name='ctf分数')),
                ('score_awd', models.IntegerField(default=0, verbose_name='awd分数')),
            ],
            options={
                'verbose_name': '团队比赛详情',
                'verbose_name_plural': '团队比赛详情',
                'ordering': ['-score_all'],
            },
        ),
        migrations.CreateModel(
            name='UserChoiceInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submit_status', models.NullBooleanField(default=None)),
                ('score', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': '用户选择题情况表',
                'verbose_name_plural': '用户选择题情况表',
            },
        ),
        migrations.CreateModel(
            name='UserCompetitionInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_all', models.IntegerField(default=0, verbose_name='个人总分')),
                ('score_choice', models.IntegerField(default=0, verbose_name='选择题分数')),
                ('score_ctf', models.IntegerField(default=0, verbose_name='ctf总分')),
                ('score_awd', models.IntegerField(default=0, verbose_name='awd总分')),
                ('wp', models.FileField(blank=True, null=True, upload_to=info.models.upload_to)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_competition', to='competition.CompetitionProfile', verbose_name='比赛')),
            ],
            options={
                'verbose_name': '个人比赛详情',
                'verbose_name_plural': '个人比赛详情',
            },
        ),
    ]
